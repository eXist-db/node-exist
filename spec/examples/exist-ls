#!/usr/bin/env node

const {connect} = require('../../index')

// read connection options from ENV
const connectionOptions = require('../connection')

// the more complex a query gets that is executed
// the more sense it makes to read it from a file
// see db.app.install and how it uses xquery/install-package.xq 
const query = `xquery version "3.1";
declare variable $collection external;
declare function local:map-child ($child, $type) {
    map {
        "type": $type,
        "name": $child
    }
};

(
    xmldb:get-child-collections($collection)
    => for-each(local:map-child(?, "collection")),
    xmldb:get-child-resources($collection)
    => for-each(local:map-child(?, "resource"))
)
    => (function ($children) { array { $children } })()
    => serialize(map { "method": "json" })
`

async function ls (connectionOptions, collection) {
    try {
        const db = connect(connectionOptions)
        const result = await db.queries.readAll(query, { variables: {collection} })
        const json = JSON.parse(result.pages.toString())
        console.log(json)
    }
    catch (e) {
        let message = e.faultString ? e.faultString : e.message
        console.error("Could not run query! Reason:", message)
        process.exit(1)
    }
}

if (!process.argv[2]) {
    console.log("Usage: exist-ls [collection]")
    console.log("Example: exist-ls /db/apps")
    process.exit(9)
}

const dbPath = process.argv[2] 

// run query
ls(connectionOptions, dbPath)
